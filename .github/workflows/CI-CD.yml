name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    
     # checkout branch create
    - uses: actions/checkout@v3

      # java use
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

      # application, yml set-up
    - name: yml 파일 생성
      run: |
          touch ./src/main/resources/application.properties
          echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
          touch ./src/main/resources/application.yml
          echo "${{ secrets.OAUTH }}" > ./src/main/resources/application.yml
          
      # chmod
    - name: Build with Gradle
      run: chmod +x gradlew
      
      # build Gradle
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test

      # DockerHub 로그인
    - name: DockerHub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Docker 이미지 빌드
    - name: Docker Image Build
      run: docker build -t jum1n/pet_nexus3:1.3 .


    # DockerHub Push
    - name: DockerHub Push
      run: docker push jum1n/pet_nexus3:1.3
      
    # EC2 인스턴스 접속 및 애플리케이션 실행
    - name: Application Run
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}

        script: |

          sudo docker kill test
          sudo docker rm -f test
          sudo docker rmi jum1n/pet_nexus3:1.3
          sudo docker pull jum1n/pet_nexus3:1.3

          sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
          --name test -d jum1n/pet_nexus3:1.3

          
